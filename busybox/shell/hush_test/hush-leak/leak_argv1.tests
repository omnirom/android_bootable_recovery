# Warm up
i=1
while test $i != X; do
    set -- a b c d e f g h i j k l m n o p q r s t u v w x y z
    shift
    shift 2
    shift 5
    shift 11
    set -- A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    shift 3
    shift 7
    i=1$i
    if test $i = 1111111111111111111111111111111111111111111111; then i=2; fi
    if test $i = 1111111111111111111111111111111111111111111112; then i=3; fi
    if test $i = 1111111111111111111111111111111111111111111113; then i=4; fi
    if test $i = 1111111111111111111111111111111111111111111114; then i=5; fi
    if test $i = 1111111111111111111111111111111111111111111115; then i=6; fi
    if test $i = 1111111111111111111111111111111111111111111116; then i=7; fi
    if test $i = 1111111111111111111111111111111111111111111117; then i=8; fi
    if test $i = 1111111111111111111111111111111111111111111118; then i=9; fi
    if test $i = 1111111111111111111111111111111111111111111119; then i=a; fi
    if test $i = 111111111111111111111111111111111111111111111a; then i=b; fi
    if test $i = 111111111111111111111111111111111111111111111b; then i=c; fi
    if test $i = 111111111111111111111111111111111111111111111c; then i=d; fi
    if test $i = 111111111111111111111111111111111111111111111d; then i=e; fi
    if test $i = 111111111111111111111111111111111111111111111e; then i=f; fi
    if test $i = 111111111111111111111111111111111111111111111f; then i=g; fi
    if test $i = 111111111111111111111111111111111111111111111g; then i=h; fi
    if test $i = 111111111111111111111111111111111111111111111h; then i=i; fi
    if test $i = 111111111111111111111111111111111111111111111i; then i=j; fi
    if test $i = 111111111111111111111111111111111111111111111j; then i=X; fi
done

unset i
set --
memleak

echo "Measuring memory leak..."
i=1
while test $i != X; do
    set -- a b c d e f g h i j k l m n o p q r s t u v w x y z
    shift
    shift 2
    shift 5
    shift 11
    set -- A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    shift 3
    shift 7
    i=1$i
    if test $i = 1111111111111111111111111111111111111111111111; then i=2; fi
    if test $i = 1111111111111111111111111111111111111111111112; then i=3; fi
    if test $i = 1111111111111111111111111111111111111111111113; then i=4; fi
    if test $i = 1111111111111111111111111111111111111111111114; then i=5; fi
    if test $i = 1111111111111111111111111111111111111111111115; then i=6; fi
    if test $i = 1111111111111111111111111111111111111111111116; then i=7; fi
    if test $i = 1111111111111111111111111111111111111111111117; then i=8; fi
    if test $i = 1111111111111111111111111111111111111111111118; then i=9; fi
    if test $i = 1111111111111111111111111111111111111111111119; then i=a; fi
    if test $i = 111111111111111111111111111111111111111111111a; then i=b; fi
    if test $i = 111111111111111111111111111111111111111111111b; then i=c; fi
    if test $i = 111111111111111111111111111111111111111111111c; then i=d; fi
    if test $i = 111111111111111111111111111111111111111111111d; then i=e; fi
    if test $i = 111111111111111111111111111111111111111111111e; then i=f; fi
    if test $i = 111111111111111111111111111111111111111111111f; then i=g; fi
    if test $i = 111111111111111111111111111111111111111111111g; then i=h; fi
    if test $i = 111111111111111111111111111111111111111111111h; then i=i; fi
    if test $i = 111111111111111111111111111111111111111111111i; then i=j; fi
    if test $i = 111111111111111111111111111111111111111111111j; then i=X; fi
done

unset i
set --
memleak

kb=$?
if test $kb -le 4; then
    echo Ok #$kb
else
    echo "Bad: $kb kb leaked"
fi
